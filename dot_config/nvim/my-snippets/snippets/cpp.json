{
	"Leetcode template": {
		"prefix": "mycp",
		"body": [
			"#include <iostream>",
			"#include <vector>",
			"#include <unordered_map>",
			" ",
			"using namespace std;",
			" ",
			"template<typename A, typename B> ostream& operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << \", \" << p.second << ')'; }",
			"template<typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type> ostream& operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = \", \"; return os << '}'; }",
			"void dbg_out() { cerr << endl; }",
			"template<typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }",
			"#ifdef LOCAL",
			"#define dbg(...) cerr << \"(\" << #__VA_ARGS__ << \"): \", dbg_out(__VA_ARGS__)",
			"#else",
			"#define dbg(...)",
			"#endif",
			" ",
			"#define ar array",
			"#define ll long long",
			"#define ld long double",
			"#define sza(x) ((int)x.size())",
			"#define all(a) (a).begin(), (a).end()",
			" ",
			"const int MAX_N = 1e5 + 5;",
			"const ll MOD = 1e9 + 7;",
			"const ll INF = 1e9;",
			"const ld EPS = 1e-9;",
			" ",
			"void solve() {",
			"}",
			" ",
			"int main() {",
			"    ios_base::sync_with_stdio(0);",
			"    cin.tie(0); cout.tie(0);",
			"    int tc = 1;",
			"    // cin >> tc;",
			"    for (int t = 1; t <= tc; t++) {",
			"       // cout << \"Case #\" << t << \": \";",
			"       solve();",
			"    }",
			"}"
		],
		"description": "leetcode template"
	},
	"cp-extension": {
		"prefix": ["cpp-cp"],
		"body": ["#include <bits/stdc++.h>",
			"using namespace std;",
			"#define ll long long",
			"#define mod 1000000007\nvoid solve()",
			"{",
				"\t$2",
				"}",
				"int main() {\n\tios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n#ifndef ONLINE_JUDGE",
					"\tfreopen(\"input.txt\", \"r\", stdin);",
					"\tfreopen(\"output.txt\", \"w\", stdout);",
					"#endif\n\n\tll test=1;\n//$1cin>>test;\n\twhile(test--)\n\t{\n\t\tsolve();\n\t}\n\treturn 0;\n}\n"

		],
		"description": "Default cpp code for CP"
	}
}
